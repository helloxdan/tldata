<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.tl.dao.AccountDao">
    
	<sql id="accountColumns">
		a.id AS "id",
		a.name AS "name",
		a.login_date AS "loginDate",
		a.status AS "status",
		a.usernum AS "usernum",
		a.groupnum AS "groupnum",
		a.role_ as "role",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.pwd_lock as "pwdLock"
	</sql>
	
	<sql id="accountJoins">
	</sql>
    
	<select id="get" resultType="Account">
		SELECT 
			<include refid="accountColumns"/>
		FROM tl_account a
		<include refid="accountJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Account">
		SELECT 
			<include refid="accountColumns"/>
		FROM tl_account a
		<include refid="accountJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			<if test="pwdLock != null and pwdLock != ''">
				AND a.pwd_lock = #{pwdLock}
			</if>
			<if test="role != null and role != ''">
				AND a.role_ = #{role}
			</if>
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Account">
		SELECT 
			<include refid="accountColumns"/>
		FROM tl_account a
		<include refid="accountJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findUnfullUserAccount" resultType="Account">
		SELECT 
			<include refid="accountColumns"/>
		FROM tl_account a
		<include refid="accountJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			and a.role_='0'
			and a.usernum <![CDATA[ < ]]> #{minUsernum}
		</where>		
		order by a.usernum asc,a.create_date desc
	</select>
	
	<!-- 查询用于分配任务的账号 -->
	<select id="findAccountForJob222" resultType="Account">
		SELECT 
			<include refid="accountColumns"/>
		FROM tl_account a
		<include refid="accountJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			and a.role_='0'
			 <!-- 账号没有被分配过 -->
			and a.id not in (select account from tl_job_user j where j.job_id=#{jobid})
		 
			
		</where>		
		order by a.usernum desc limit ${limit}
	</select>
	<select id="findAccountForJob" resultType="Account">
		SELECT 
			<include refid="accountColumns"/>
		  ,b.anum
		FROM tl_account a 
		left join 	(	select count(*) anum,account from tl_job_user where job_id=#{jobid} group by account ) b  on 	a.id=b.account
		<include refid="accountJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			and a.role_='0' 
		  	and (b.anum <![CDATA[ < ]]> #{minUsernum}	 or b.anum is null)		
		</where>		
		order by a.usernum desc limit ${limit}
	</select>
	
	<insert id="insert">
		INSERT INTO tl_account(
			id,
			name,
			login_date,
			status,
			usernum,
			groupnum,role_,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{name},
			#{loginDate},
			#{status},
			#{usernum},
			#{groupnum},#{role},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE tl_account SET 	
			id = #{id},
			name = #{name},
			login_date = #{loginDate},
			status = #{status},
			usernum = #{usernum},
			groupnum = #{groupnum},
			role_ = #{role},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM  tl_account WHERE id = #{id}
	</update>
	<update id="delete2">
		UPDATE tl_account SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 将所有运行状态的账号改为ready -->
	<update id="resetAccountStatus">
		UPDATE tl_account SET
			status = 'ready',
			update_date = CURRENT_TIMESTAMP
		WHERE status = 'run'
	</update>
	<update id="updateUsernum">
		update tl_account t set usernum=(select count(distinct userid) from tl_job_user c where c.account=t.id  and job_id='auto')
		<where>
		<if test="id != null and id != ''">
				AND t.id = #{id}
			</if>
		</where>
	</update>
	<update id="updateGroupnum">
		update tl_account t set groupnum=(select count(distinct chatid) from tl_chat c where c.ischannel='1' and c.account=t.id)
		<where>
		<if test="id != null and id != ''">
				AND t.id = #{id}
			</if>
		</where>
	</update>
	
	
	<select id="findAccountInHis" resultType="Account">
		SELECT id,trynum,status,update_date
		FROM tl_account_his a 
		<where>  
			and a.id=#{id}
		</where>		
		 limit 1
	</select>
	<insert id="insertAccountHis">
		INSERT INTO tl_account_his(
			id,
			trynum, 
			status, 
			update_date ,remarks
		) VALUES (
			#{id},
			#{trynum},
			#{status}, 
			#{updateDate} ,#{remarks}
		)
	</insert>
	
	<update id="updateAccountHis">
		UPDATE tl_account_his SET 	
			id = #{id},
			trynum = #{trynum},
			status = #{status}, 
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<update id="updatePwdLock">
		UPDATE tl_account  SET  
			pwd_lock = #{pwdLock}
		WHERE id = #{id}
	</update>
</mapper>